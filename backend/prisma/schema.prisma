generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model area {
  id          Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  user_id     Int
  name        String?      @db.VarChar(45)
  description String?      @db.LongText
  created_at  DateTime?    @default(now())
  updated_at  DateTime?    @default(now())
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_area_user1")
  area_video  area_video[]

  @@index([user_id], map: "fk_area_user1_idx")
}

model area_video {
  area_id    Int
  video_id   Int
  user_id    Int
  order      Int?
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())
  area       area      @relation(fields: [area_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_area_video_area")
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_area_video_user1")
  video      video     @relation(fields: [video_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_area_video_video1")

  @@id([area_id, video_id])
  @@index([area_id], map: "fk_area_video_area_idx")
  @@index([user_id], map: "fk_area_video_user1_idx")
  @@index([video_id], map: "fk_area_video_video1_idx")
}

model form {
  id          Int       @id @unique(map: "id_UNIQUE") @default(autoincrement())
  user_id     Int
  title       String?   @db.VarChar(45)
  link        String?   @db.VarChar(1000)
  description String?   @db.VarChar(100)
  changed_at  DateTime? @default(now()) 
  updated_at  DateTime? @default(now())
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_form_user1")

  @@index([user_id], map: "fk_form_user1_idx")
}

model user {
  id         Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  username   String       @unique(map: "username_UNIQUE") @db.VarChar(45)
  password   String       @unique(map: "password_UNIQUE") @db.VarChar(90)
  name       String?      @db.VarChar(45)
  email      String?      @db.VarChar(60)
  created_at DateTime?    @default(now())
  updated_at DateTime?    @default(now())
  area       area[]
  area_video area_video[]
  form       form[]
  video      video[]
}

model video {
  id          Int          @id @unique(map: "id_UNIQUE") @default(autoincrement())
  user_id     Int
  name        String?      @db.VarChar(45)
  description String?      @db.LongText
  link        String?      @db.VarChar(1000)
  created_at  DateTime?    @default(now())
  updated_at  DateTime?    @default(now())
  user        user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_video_user1")
  area_video  area_video[]

  @@index([user_id], map: "fk_video_user1_idx")
}
